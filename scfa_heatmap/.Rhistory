theme_bw() +
scale_fill_manual(values=c("#009E73", "#56B4E9", "#E69F00",
"#999999", "#F0E442", "#7A378B",
"#0072B2", "#D55E00", "#CC79A7"))+
labs(x="",
y="Proportion (%) \n") +
theme(plot.title   = element_text(size = rel(2.50),hjust=0.5),
axis.title   = element_text(size = rel(2.00)),
axis.text.x  = element_text(size = rel(1.25),hjust=1.0,angle=45),
axis.text.y  = element_text(size = rel(1.45)),
strip.text.x = element_text(size = rel(1.25),face="bold"),
legend.title = element_text(size = rel(1.00)),
legend.text  = element_text(size = rel(0.90)),
legend.box.background = element_rect(),
legend.box.margin = margin(1,1,1,1),
legend.position = "right") -> plot
plot
means.sem <- ddply(metabolites, c("Donor","Treatment","Metabolite"),
summarise,
mean=mean(Percentage),
sem=sd(Percentage)/sqrt(length(Percentage)))
means.sem <- transform(means.sem, lower=mean-sem, upper=mean+sem)
means.sem[means.sem$Metabolite=='Acetate',6:7] <- means.sem[means.sem$Metabolite=='Acetate',4] +
means.sem[means.sem$Metabolite=='Propionate',6:7] +
means.sem[means.sem$Metabolite=='Butyrate',6:7] +
means.sem[means.sem$Metabolite=='Formate',6:7] +
means.sem[means.sem$Metabolite=='Lactate',6:7] +
means.sem[means.sem$Metabolite=='Succinate',6:7] +
means.sem[means.sem$Metabolite=='Isobutyrate',6:7] +
means.sem[means.sem$Metabolite=='Isovalerate',6:7] +
means.sem[means.sem$Metabolite=='Valerate',6:7]
means.sem[means.sem$Metabolite=='Propionate',6:7] <- means.sem[means.sem$Metabolite=='Propionate',4] +
means.sem[means.sem$Metabolite=='Butyrate',6:7] +
means.sem[means.sem$Metabolite=='Formate',6:7] +
means.sem[means.sem$Metabolite=='Lactate',6:7] +
means.sem[means.sem$Metabolite=='Succinate',6:7] +
means.sem[means.sem$Metabolite=='Isobutyrate',6:7] +
means.sem[means.sem$Metabolite=='Isovalerate',6:7] +
means.sem[means.sem$Metabolite=='Valerate',6:7]
means.sem[means.sem$Metabolite=='Butyrate',6:7] <- means.sem[means.sem$Metabolite=='Butyrate',4] +
means.sem[means.sem$Metabolite=='Formate',6:7] +
means.sem[means.sem$Metabolite=='Lactate',6:7] +
means.sem[means.sem$Metabolite=='Succinate',6:7] +
means.sem[means.sem$Metabolite=='Isobutyrate',6:7] +
means.sem[means.sem$Metabolite=='Isovalerate',6:7] +
means.sem[means.sem$Metabolite=='Valerate',6:7]
means.sem[means.sem$Metabolite=='Formate',6:7] <- means.sem[means.sem$Metabolite=='Formate',4] +
means.sem[means.sem$Metabolite=='Lactate',6:7] +
means.sem[means.sem$Metabolite=='Succinate',6:7] +
means.sem[means.sem$Metabolite=='Isobutyrate',6:7] +
means.sem[means.sem$Metabolite=='Isovalerate',6:7] +
means.sem[means.sem$Metabolite=='Valerate',6:7]
means.sem[means.sem$Metabolite=='Lactate',6:7] <- means.sem[means.sem$Metabolite=='Lactate',4] +
means.sem[means.sem$Metabolite=='Succinate',6:7] +
means.sem[means.sem$Metabolite=='Isobutyrate',6:7] +
means.sem[means.sem$Metabolite=='Isovalerate',6:7] +
means.sem[means.sem$Metabolite=='Valerate',6:7]
means.sem[means.sem$Metabolite=='Succinate',6:7] <- means.sem[means.sem$Metabolite=='Succinate',6:7] +
means.sem[means.sem$Metabolite=='Isobutyrate',6:7] +
means.sem[means.sem$Metabolite=='Isovalerate',6:7] +
means.sem[means.sem$Metabolite=='Valerate',6:7]
means.sem[means.sem$Metabolite=='Isobutyrate',6:7] <- means.sem[means.sem$Metabolite=='Isobutyrate',6:7] +
means.sem[means.sem$Metabolite=='Isovalerate',6:7] +
means.sem[means.sem$Metabolite=='Valerate',6:7]
means.sem[means.sem$Metabolite=='Isovalerate',6:7] <- means.sem[means.sem$Metabolite=='Isovalerate',6:7] +
means.sem[means.sem$Metabolite=='Valerate',6:7]
plotSEM <- plot +
geom_errorbar(data=means.sem,
aes(ymax=upper,ymin=lower))
plotSEM
ggplot(data=means, aes(x=Donor, y=mean, fill=Metabolite)) +
geom_bar(stat="identity") +
facet_grid(cols = vars(Treatment)) +
theme_bw() +
scale_fill_manual(values=c("#009E73", "#56B4E9", "#E69F00",
"#999999", "#F0E442", "#7A378B",
"#0072B2", "#D55E00", "#CC79A7"))+
labs(x="",
y="Proportion (%) \n") +
theme(plot.title   = element_text(size = rel(2.50),hjust=0.5),
axis.title   = element_text(size = rel(2.00)),
axis.text.x  = element_text(size = rel(1.25),hjust=1.0,angle=0),
axis.text.y  = element_text(size = rel(1.45)),
strip.text.x = element_text(size = rel(1.25),face="bold"),
legend.title = element_text(size = rel(1.00)),
legend.text  = element_text(size = rel(0.90)),
legend.box.background = element_rect(),
legend.box.margin = margin(1,1,1,1),
legend.position = "right") -> plot
plot
metabolites = readxl::read_xlsx("~/Downloads/SCFA_proportion_NEW.xlsx")
metabolites$Donor <- as.numeric(gsub(pattern = "Donor ", replacement = "", x = metabolites$Donor)) -1
metabolites$Donor <- paste0("D", metabolites$Donor)
metabolites$Metabolite[metabolites$Metabolite == "Proponate"] <- "Propionate"
metabolites$Metabolite<-factor(metabolites$Metabolite,
levels = c("Acetate","Propionate","Butyrate",
"Formate","Lactate","Succinate",
"Isobutyrate","Isovalerate","Valerate"))
metabolites$Treatment <- factor(metabolites$Treatment, c("Control", "NB12", "Extra B12"))
means <- ddply(metabolites, c("Donor","Treatment","Metabolite"), summarise,
mean=mean(Percentage))
means
ggplot(data=means, aes(x=Donor, y=mean, fill=Metabolite)) +
geom_bar(stat="identity") +
facet_grid(cols = vars(Treatment)) +
theme_bw() +
scale_fill_manual(values=c("#009E73", "#56B4E9", "#E69F00",
"#999999", "#F0E442", "#7A378B",
"#0072B2", "#D55E00", "#CC79A7"))+
labs(x="",
y="Proportion (%) \n") +
theme(plot.title   = element_text(size = rel(2.50),hjust=0.5),
axis.title   = element_text(size = rel(2.00)),
axis.text.x  = element_text(size = rel(1.25),hjust=1.0,angle=0),
axis.text.y  = element_text(size = rel(1.45)),
strip.text.x = element_text(size = rel(1.25),face="bold"),
legend.title = element_text(size = rel(1.00)),
legend.text  = element_text(size = rel(0.90)),
legend.box.background = element_rect(),
legend.box.margin = margin(1,1,1,1),
legend.position = "right") -> plot
plot
ggplot(data=means, aes(x=Donor, y=mean, fill=Metabolite)) +
geom_bar(stat="identity") +
facet_grid(cols = vars(Treatment)) +
theme_bw() +
scale_fill_manual(values=c("#009E73", "#56B4E9", "#E69F00",
"#999999", "#F0E442", "#7A378B",
"#0072B2", "#D55E00", "#CC79A7"))+
labs(x="",
y="Proportion (%) \n") +
theme(plot.title   = element_text(size = rel(2.50),hjust=0.5),
axis.title   = element_text(size = rel(2.00)),
axis.text.x  = element_text(size = rel(1.25),hjust=0.5,angle=0),
axis.text.y  = element_text(size = rel(1.45)),
strip.text.x = element_text(size = rel(1.25),face="bold"),
legend.title = element_text(size = rel(1.00)),
legend.text  = element_text(size = rel(0.90)),
legend.box.background = element_rect(),
legend.box.margin = margin(1,1,1,1),
legend.position = "right") -> plot
plot
ggplot(data=means, aes(x=Donor, y=mean, fill=Metabolite)) +
geom_bar(stat="identity") +
facet_grid(cols = vars(Treatment)) +
theme_bw() +
scale_fill_manual(values=c("#009E73", "#56B4E9", "#E69F00",
"#999999", "#F0E442", "#7A378B",
"#0072B2", "#D55E00", "#CC79A7"))+
labs(x="",
y="Proportion (%) \n") +
theme(plot.title   = element_text(size = rel(2.00),hjust=0.5),
axis.title   = element_text(size = rel(2.00)),
axis.text.x  = element_text(size = rel(1.25),hjust=0.5,angle=0),
axis.text.y  = element_text(size = rel(1.45)),
strip.text.x = element_text(size = rel(1.25),face="bold"),
legend.title = element_text(size = rel(1.00)),
legend.text  = element_text(size = rel(0.90)),
legend.box.background = element_rect(),
legend.box.margin = margin(1,1,1,1),
legend.position = "right") -> plot
plot
means.sem <- ddply(metabolites, c("Donor","Treatment","Metabolite"),
summarise,
mean=mean(Percentage),
sem=sd(Percentage)/sqrt(length(Percentage)))
means.sem <- transform(means.sem, lower=mean-sem, upper=mean+sem)
means.sem[means.sem$Metabolite=='Acetate',6:7] <- means.sem[means.sem$Metabolite=='Acetate',4] +
means.sem[means.sem$Metabolite=='Propionate',6:7] +
means.sem[means.sem$Metabolite=='Butyrate',6:7] +
means.sem[means.sem$Metabolite=='Formate',6:7] +
means.sem[means.sem$Metabolite=='Lactate',6:7] +
means.sem[means.sem$Metabolite=='Succinate',6:7] +
means.sem[means.sem$Metabolite=='Isobutyrate',6:7] +
means.sem[means.sem$Metabolite=='Isovalerate',6:7] +
means.sem[means.sem$Metabolite=='Valerate',6:7]
means.sem[means.sem$Metabolite=='Propionate',6:7] <- means.sem[means.sem$Metabolite=='Propionate',4] +
means.sem[means.sem$Metabolite=='Butyrate',6:7] +
means.sem[means.sem$Metabolite=='Formate',6:7] +
means.sem[means.sem$Metabolite=='Lactate',6:7] +
means.sem[means.sem$Metabolite=='Succinate',6:7] +
means.sem[means.sem$Metabolite=='Isobutyrate',6:7] +
means.sem[means.sem$Metabolite=='Isovalerate',6:7] +
means.sem[means.sem$Metabolite=='Valerate',6:7]
means.sem[means.sem$Metabolite=='Butyrate',6:7] <- means.sem[means.sem$Metabolite=='Butyrate',4] +
means.sem[means.sem$Metabolite=='Formate',6:7] +
means.sem[means.sem$Metabolite=='Lactate',6:7] +
means.sem[means.sem$Metabolite=='Succinate',6:7] +
means.sem[means.sem$Metabolite=='Isobutyrate',6:7] +
means.sem[means.sem$Metabolite=='Isovalerate',6:7] +
means.sem[means.sem$Metabolite=='Valerate',6:7]
means.sem[means.sem$Metabolite=='Formate',6:7] <- means.sem[means.sem$Metabolite=='Formate',4] +
means.sem[means.sem$Metabolite=='Lactate',6:7] +
means.sem[means.sem$Metabolite=='Succinate',6:7] +
means.sem[means.sem$Metabolite=='Isobutyrate',6:7] +
means.sem[means.sem$Metabolite=='Isovalerate',6:7] +
means.sem[means.sem$Metabolite=='Valerate',6:7]
means.sem[means.sem$Metabolite=='Lactate',6:7] <- means.sem[means.sem$Metabolite=='Lactate',4] +
means.sem[means.sem$Metabolite=='Succinate',6:7] +
means.sem[means.sem$Metabolite=='Isobutyrate',6:7] +
means.sem[means.sem$Metabolite=='Isovalerate',6:7] +
means.sem[means.sem$Metabolite=='Valerate',6:7]
means.sem[means.sem$Metabolite=='Succinate',6:7] <- means.sem[means.sem$Metabolite=='Succinate',6:7] +
means.sem[means.sem$Metabolite=='Isobutyrate',6:7] +
means.sem[means.sem$Metabolite=='Isovalerate',6:7] +
means.sem[means.sem$Metabolite=='Valerate',6:7]
means.sem[means.sem$Metabolite=='Isobutyrate',6:7] <- means.sem[means.sem$Metabolite=='Isobutyrate',6:7] +
means.sem[means.sem$Metabolite=='Isovalerate',6:7] +
means.sem[means.sem$Metabolite=='Valerate',6:7]
means.sem[means.sem$Metabolite=='Isovalerate',6:7] <- means.sem[means.sem$Metabolite=='Isovalerate',6:7] +
means.sem[means.sem$Metabolite=='Valerate',6:7]
plotSEM <- plot +
geom_errorbar(data=means.sem,
aes(ymax=upper,ymin=lower))
plotSEM
ggsave("~/Downloads/metabolites.pdf",plot,width=12,height=10)
ggsave("~/Downloads/metabolites_sem.pdf",plotSEM,width=12,height=10)
ggsave("~/Downloads/metabolites.pdf",plot,width=12,height=10)
BiocManager::install("styler")
library(styler)
remotes::install_github("gadenbuie/xaringanExtra")
BiocManager::install("xaringan")
BiocManager::install("emitanaka/anicon")
library('pagedown')
BiocManager::install("pagedown")
xaringan:::inf_mr()
servr::daemon_stop(5)
servr::daemon_stop(0)
servr::daemon_stop(1)
servr::daemon_stop(2)
servr::daemon_stop(3)
servr::daemon_stop(4)
xaringan:::inf_mr()
library(ggplot2)
df <- ToothGrowth
df$dose <- as.factor(df$dose)
head(df)
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
df2 <- data_summary(ToothGrowth, varname="len",
groupnames=c("supp", "dose"))
# Convert dose to a factor variable
df2$dose=as.factor(df2$dose)
head(df2)
library(ggplot2)
# Default bar plot
p<- ggplot(df2, aes(x=dose, y=len, fill=supp)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=len-sd, ymax=len+sd), width=.2,
position=position_dodge(.9))
print(p)
# Finished bar plot
p+labs(title="Tooth length per dose", x="Dose (mg)", y = "Length")+
theme_classic() +
scale_fill_manual(values=c('#999999','#E69F00'))
loadfonts(dev="win")
library(extrafont)
extrafont::font_import()
library(ggplot2)
# Default bar plot
p<- ggplot(df2, aes(x=dose, y=len, fill=supp)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=len-sd, ymax=len+sd), width=.2,
position=position_dodge(.9))
print(p)
# Finished bar plot
p+labs(title="Tooth length per dose", x="Dose (mg)", y = "Length")+
theme_classic() +
scale_fill_manual(values=c('#999999','#E69F00'))
library(ggplot2)
# Default bar plot
p<- ggplot(df2, aes(x=dose, y=len, fill=supp)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=len-sd, ymax=len+sd), width=.2,
position=position_dodge(.9))
print(p)
# Finished bar plot
p+labs(title="Tooth length per dose", x="Dose (mg)", y = "Length")+
theme_classic() +
scale_fill_manual(values=c('#999999','#E69F00'))
theme(text=element_text(family="Garamond", size=14))
library(ggplot2)
# Default bar plot
p<- ggplot(df2, aes(x=dose, y=len, fill=supp)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=len-sd, ymax=len+sd), width=.2,
position=position_dodge(.9))
print(p)
# Finished bar plot
p+labs(title="Tooth length per dose", x="Dose (mg)", y = "Length")+
theme_classic() +
scale_fill_manual(values=c('#999999','#E69F00'))
data <- read.delim("~/Downloads/SraRunTable.txt")
View(data)
data <- read.csv("~/Downloads/SraRunTable.txt")
View(data)
table(data$Center.Name)
table(data$Assay.Type)
table(data$LibraryLayout)
table(data$sex)
table(data$data_type..run.)
table(data$disease_group)
table(data$age_at_death)
table(data$phenotype)
table(data$study_disease)
table(data$tissue)
data$race
table(data$race)
table(data$BioProject)
table(data$Organism)
table(data$sex)
table(data$Age)
table(data$LibraryLayout)
table(data$Developmental_Stage)
data$Assay.Type
data[data$Assay.Type == "ATAC-seq",]
data[grep(pattern = "ATAC", x = data$Assay.Type),]
atac <- data[grep(pattern = "ATAC", x = data$Assay.Type),]
data_sp <- split(data, data$Assay.Type)
data_sp$`ATAC-seq`$sex
data_sp$`ATAC-seq`$library_type..exp.
data_sp$`ATAC-seq`$library_type..run.
data_sp$`ATAC-seq`$LibraryLayout
data_sp$`ATAC-seq`$BioProject
install.packages("synapser", repos=c("http://ran.synapse.org", "http://cran.fhcrc.org"))
install.packages("synapser", repos=c("http://ran.synapse.org", "http://cran.fhcrc.org"), type="mac.binary")
BiocManager::install("PythonEmbedInR")
BiocManager::install("Sage-Bionetworks/PythonEmbedInR")
BiocManager::install("Sage-Bionetworks/synapser")
install.packages("synapser", repos=c("http://ran.synapse.org", "http://cran.fhcrc.org"), type="mac.binary")
install.packages("PythonEmbedInR", repos=c("http://cran.fhcrc.org", "http://ran.synapse.org"))
data_sp$`Bisulfite-Seq`
data_sp$`Bisulfite-Seq`$sex
data_sp$`Bisulfite-Seq`$Assay.Type
install.packages("PythonEmbedInR", repos=c("http://cran.fhcrc.org", "http://ran.synapse.org"))
install.packages("PythonInR")
require(devtools)
install_bitbucket("Floooo/PythonInR")
library(synapser)
install.packages("PythonInR")
install.packages("PythonEmbedInR", repos=c("http://cran.fhcrc.org", "http://ran.synapse.org"))
install.packages("BiocManager")
BiocManager::install("rjson")
BiocManager::install("alexcb/rjson")
BiocManager::install("remotes")
install.packages("BiocManager")
install.packages("PythonEmbedInR", repos=c("http://cran.fhcrc.org", "http://ran.synapse.org"))
remotes::install("alexcb/rjson")
BiocManager::install("remotes")
.libPaths()
BiocManager::install("remotes")
install.packages("BiocManager")
BiocManager::install("remotes")
BiocManager::install("Sage-Bionetworks/synapser")
BiocManager::install("Sage-Bionetworks/PythonEmbedInR")
BiocManager::install("rjson")
BiocManager::install("alexcb/rjson")
BiocManager::install("devtools")
library(devtools)
BiocManager::install("usethis")
BiocManager::install("openssl")
install.packages("openssl", lib = "/Users/username/Library/R/3.6/library")
BiocManager::install("openssl")
.libPaths()
BiocManager::install("openssl")
.libPaths()
.libPaths() <- c(.libPaths(),"~/opt/anaconda3/lib/R/library")
.libPaths <- c(.libPaths(),"~/opt/anaconda3/lib/R/library")
.libPaths()
.libPaths("~/opt/anaconda3/lib/R/library")
.libPaths()
.libPaths("~/opt/anaconda3/lib/R/library")
.libPaths()
library(openssl)
BiocManager::install("openssl")
BiocManager::install("openssl", force = T)
BiocManager::install("jeroen/openssl")
Sys.setenv(LD_LIBRARY_PATH = "/usr/local/lib")
Sys.setenv(PKG_CONFIG_PATH = "/usr/local/lib/pkgconfig")
install.packages("openssl")
devtools::install("~/Downloads/openssl-master/")
BiocManager::install("usethis")
devtools::install("~/Downloads/openssl-master/")
devtools::install("~/Downloads/rjson-main/")
devtools::install("~/Downloads/rjson-main/rjson/")
BiocManager::install("Sage-Bionetworks/PythonEmbedInR")
devtools::install("~/Downloads/PythonEmbedInR-master/")
ln -s /usr/local/opt/openssl/lib/libssl.1.1.dylib /usr/local/lib/
ln -s /usr/local/opt/openssl/lib/libcrypto.1.1.dylib /usr/local/lib
devtools::install("~/Downloads/PythonEmbedInR-master/")
install.packages("PythonEmbedInR")
install.packages("PythonEmbedInR", repos=c("http://cran.fhcrc.org", "http://ran.synapse.org"))
install.packages("PythonEmbedInR", repos=c("http://cran.fhcrc.org", "http://cran.synapse.org"))
sybapse <- read.csv("~/Downloads/Job-2070621610726273340674150231.csv")
synapse <- read.csv("~/Downloads/Job-2070621610726273340674150231.csv")
View(synapse)
geo <- read.csv("~/Downloads/SraRunTable.txt")
synapse <- read.csv("~/Downloads/Job-2070621610726273340674150231.csv")
geo_sp <- split(geo, data$Assay.Type)
geo <- read.csv("~/Downloads/SraRunTable.txt")
synapse <- read.csv("~/Downloads/Job-2070621610726273340674150231.csv")
geo_sp <- split(geo, data$Assay.Type)
geo_sp <- split(geo, geo$Assay.Type)
geo_sp$`ATAC-seq`
.libPaths()
geo <- read.csv("~/Downloads/SraRunTable.txt")
synapse <- read.csv("~/Downloads/Job-2070621610726273340674150231.csv")
geo_sp <- split(geo, geo$Assay.Type)
writexl::write_xlsx(geo_sp, "~/Documents/ad/geo.xlsx", col_names = T, format_headers = T)
# install.packages("devtools")
devtools::install_github("EvaMaeRey/ggcalendar")
library(ggcalendar)
ggcalendar() +
geom_text_calendar() +
geom_point_calendar(data = . %>% filter(wday(date) %in% 2:6),
alpha = .2,
size = 5,
color = "red")
library(ggplot)
BiocManager::install("ggplot")
library(ggplot)
.libPaths()
BiocManager::install("ggplot")
install.packages("BiocManager")
BiocManager::install("ggplot")
devtools::install_github("EvaMaeRey/ggcalendar")
BiocManager::install(devtools)
BiocManager::install("devtools")
devtools::install_github("EvaMaeRey/ggcalendar")
library(ggplot)
library(ggcalendar)
library(ggplot)
library(ggplot2)
ggcalendar() +
geom_text_calendar() +
geom_point_calendar(data = . %>% filter(wday(date) %in% 2:6),
alpha = .2,
size = 5,
color = "red")
ggcalendar() +
geom_text_calendar()
ggcalendar() +
geom_text_calendar()
library(ggcalendar)
library(ggplot2)
library(lubridate)
library(tidyverse)
BiocManager::install("tidyverse")
library(ggplot2)
library(ggcalendar)
ggcalendar() +
geom_text_calendar()
ggcalendar() +
geom_text_calendar() +
geom_point_calendar(data = . %>% filter(wday(date) %in% 2:6),
alpha = .2,
size = 5,
color = "red")
geom_point_calendar(data = . %>% filter(wday(date) %in% 2:6),
alpha = .2,
size = 5,
color = "red")
ggcalendar() +
geom_text_calendar()
library(ComplexHeatmap)
library(circlize)
library(dplyr)
library(plyr)
library(report)
library(readxl)
library(RColorBrewer)
setwd("~/Desktop/palni/scfa_heatmap")
scfa <- data.frame(
read_xlsx(path = "SCFAs_donor_1_to_9_concentration_in_mM.xlsx", sheet = 1),
check.names = F
)
scfa <- scfa[, -c(3:5)]
scfa <- aggregate(scfa[, 3:11], list(Donor = scfa$Donor, Treatment = scfa$Treatment), mean)
scfa$Donor <- gsub(pattern = "Donor ", replacement = "", x = scfa$Donor)
scfa$Donor <- as.numeric(scfa$Donor) - 1
scfa$Donor <- paste0("D", scfa$Donor)
scfa$Treatment <- gsub(pattern = " ", replacement = "", x = scfa$Treatment)
scfa <- scfa[scfa$Treatment != "ExtraB9",]
scfa$Treatment[scfa$Treatment == "NB9B12"] <- "NB12"
scfa$ID <- paste(scfa$Donor, scfa$Treatment, sep = "_")
an <- scfa[, c(12, 1:2)]
an
scfa
rownames(scfa) <- scfa$ID
scfa <- scfa[, -c(12, 1:2)]
colnames(scfa) <- gsub(pattern = "\\ \\[mM]", replacement = "", x = colnames(scfa))
scfa1 <- split(x = scfa, f = gsub(pattern = "_.*", replacement = "", x = rownames(scfa)))
names(scfa1)
an
rn <- rownames(scfa1)
rn
rownames(scfa1)
styler:::style_active_file()
setwd("~/Desktop/palni/scfa_heatmap")
